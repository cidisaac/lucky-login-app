version: '3.8'
services:
#  redis_db:
#    image: redis:latest
#    ports:
#      - 6379:6379
#    networks:
#      - nesjs-network
  db:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=luckydb
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - nesjs-network
  dev:
    container_name: lucky_api_dev
    image: lucky-api-dev:1.0.0
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile
    command: npm run start:dev
    ports:
      - 3000:3000
    networks:
      - nesjs-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    depends_on:
#      - redis_db
      - db
    links:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/ping"]
      retries: 5
      start_period: 20s
      timeout: 10s
#  prod:
#    container_name: nestjs_api_prod
#    image: nestjs_api_prod:1.0.0
#    build:
#      context: .
#      target: production
#      dockerfile: ./Dockerfile
#    command: npm run start:prod
#    ports:
#      - 9229:9229
#    networks:
#      - nesjs-network
#    volumes:
#      - .:/usr/src/app
#      - /usr/src/app/node_modules
#    restart: unless-stopped
volumes:
  db:
    driver: local
networks:
  nesjs-network: